spec:
  templates:
  # get number operator
  - name: get-number-operator
    parent: generic-task
    inputs:
      parameters:
      - name: n-qubits
      - name: n-particles
        default: None
      - name: command
        value: python3 main_script.py
      artifacts:
      - name: main-script
        path: /app/main_script.py
        raw:
          data: |
            from qeopenfermion import get_fermion_number_operator, save_interaction_operator
            number_op = get_fermion_number_operator({{inputs.parameters.n-qubits}}, {{inputs.parameters.n-particles}})
            save_interaction_operator(number_op, 'number-op.json')
    outputs:
      artifacts:
      - name: number-op
        path: /app/number-op.json

  # get diagonal component
  - name: get-diagonal-component
    parent: generic-task
    inputs:
      parameters:
      - name: command
        value: python3 main_script.py
      artifacts:
      - name: interaction-op
        path: /app/interaction_op.json
      - name: main-script
        path: /app/main_script.py
        raw:
          data: |
            from qeopenfermion import (get_diagonal_component, save_interaction_operator, 
                                       load_interaction_operator)
            interaction_op = load_interaction_operator('interaction_op.json')
            diagonal_op, remainder_op = get_diagonal_component(interaction_op)
            save_interaction_operator(diagonal_op, 'diagonal_op.json')
            save_interaction_operator(remainder_op, 'remainder_op.json')
    outputs:
      artifacts:
      - name: diagonal-op
        path: /app/diagonal_op.json
      - name: remainder-op
        path: /app/remainder_op.json
